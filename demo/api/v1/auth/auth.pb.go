// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.14.0
// source: v1/auth/auth.proto

package auth

import (
	_ "github.com/google/gnostic/openapiv3"
	_ "github/invokerw/gintos/demo/api/v1/common"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 验证密码结果码
type VerifyPasswordResult int32

const (
	VerifyPasswordResult_SUCCESS            VerifyPasswordResult = 0 // 验证成功
	VerifyPasswordResult_ACCOUNT_NOT_EXISTS VerifyPasswordResult = 1 // 账号不存在
	VerifyPasswordResult_WRONG_PASSWORD     VerifyPasswordResult = 2 // 密码错误
	VerifyPasswordResult_FREEZE             VerifyPasswordResult = 3 // 已冻结
	VerifyPasswordResult_DELETED            VerifyPasswordResult = 4 // 已删除
)

// Enum value maps for VerifyPasswordResult.
var (
	VerifyPasswordResult_name = map[int32]string{
		0: "SUCCESS",
		1: "ACCOUNT_NOT_EXISTS",
		2: "WRONG_PASSWORD",
		3: "FREEZE",
		4: "DELETED",
	}
	VerifyPasswordResult_value = map[string]int32{
		"SUCCESS":            0,
		"ACCOUNT_NOT_EXISTS": 1,
		"WRONG_PASSWORD":     2,
		"FREEZE":             3,
		"DELETED":            4,
	}
)

func (x VerifyPasswordResult) Enum() *VerifyPasswordResult {
	p := new(VerifyPasswordResult)
	*p = x
	return p
}

func (x VerifyPasswordResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VerifyPasswordResult) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_auth_auth_proto_enumTypes[0].Descriptor()
}

func (VerifyPasswordResult) Type() protoreflect.EnumType {
	return &file_v1_auth_auth_proto_enumTypes[0]
}

func (x VerifyPasswordResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VerifyPasswordResult.Descriptor instead.
func (VerifyPasswordResult) EnumDescriptor() ([]byte, []int) {
	return file_v1_auth_auth_proto_rawDescGZIP(), []int{0}
}

type RegisterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` // 用户名，必选项。
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` // 用户的密码，必选项。
	Email         string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`       // 用户的邮箱，必选项。
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	mi := &file_v1_auth_auth_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_auth_auth_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_v1_auth_auth_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RegisterRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RegisterRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// 用户后台登出 - 请求
type LogoutRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogoutRequest) Reset() {
	*x = LogoutRequest{}
	mi := &file_v1_auth_auth_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutRequest) ProtoMessage() {}

func (x *LogoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_auth_auth_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutRequest.ProtoReflect.Descriptor instead.
func (*LogoutRequest) Descriptor() ([]byte, []int) {
	return file_v1_auth_auth_proto_rawDescGZIP(), []int{1}
}

func (x *LogoutRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 用户后台登录 - 请求
type LoginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` // 用户名，必选项。
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` // 用户的密码，必选项。
	ClientId      *string                `protobuf:"bytes,5,opt,name=client_id,proto3,oneof" json:"client_id,omitempty"`
	ClientSecret  *string                `protobuf:"bytes,6,opt,name=client_secret,proto3,oneof" json:"client_secret,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	mi := &file_v1_auth_auth_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_auth_auth_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_v1_auth_auth_proto_rawDescGZIP(), []int{2}
}

func (x *LoginRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginRequest) GetClientId() string {
	if x != nil && x.ClientId != nil {
		return *x.ClientId
	}
	return ""
}

func (x *LoginRequest) GetClientSecret() string {
	if x != nil && x.ClientSecret != nil {
		return *x.ClientSecret
	}
	return ""
}

// 用户后台登录 - 回应
type LoginResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccessToken   string                 `protobuf:"bytes,1,opt,name=access_token,proto3" json:"access_token,omitempty"`    // 访问令牌，必选项。
	RefreshToken  string                 `protobuf:"bytes,2,opt,name=refresh_token,proto3" json:"refresh_token,omitempty"`  // 更新令牌，用来获取下一次的访问令牌，可选项。
	TokenType     string                 `protobuf:"bytes,3,opt,name=token_type,proto3" json:"token_type,omitempty"`        // 令牌类型，该值大小写不敏感，必选项，可以是bearer类型或mac类型。
	ExpiresIn     *int64                 `protobuf:"varint,4,opt,name=expires_in,proto3,oneof" json:"expires_in,omitempty"` // 令牌有效时间，单位为秒。如果访问令牌过期，服务器应回复授予访问令牌的持续时间。如果省略该参数，必须其他方式设置过期时间。
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	mi := &file_v1_auth_auth_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_auth_auth_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_v1_auth_auth_proto_rawDescGZIP(), []int{3}
}

func (x *LoginResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *LoginResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *LoginResponse) GetTokenType() string {
	if x != nil {
		return x.TokenType
	}
	return ""
}

func (x *LoginResponse) GetExpiresIn() int64 {
	if x != nil && x.ExpiresIn != nil {
		return *x.ExpiresIn
	}
	return 0
}

// 用户刷新令牌 - 请求
type RefreshTokenRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RefreshToken  string                 `protobuf:"bytes,1,opt,name=refresh_token,proto3" json:"refresh_token,omitempty"` // 更新令牌，用来获取下一次的访问令牌，必选项。
	ClientId      *string                `protobuf:"bytes,5,opt,name=client_id,proto3,oneof" json:"client_id,omitempty"`
	ClientSecret  *string                `protobuf:"bytes,6,opt,name=client_secret,proto3,oneof" json:"client_secret,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshTokenRequest) Reset() {
	*x = RefreshTokenRequest{}
	mi := &file_v1_auth_auth_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenRequest) ProtoMessage() {}

func (x *RefreshTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_auth_auth_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenRequest.ProtoReflect.Descriptor instead.
func (*RefreshTokenRequest) Descriptor() ([]byte, []int) {
	return file_v1_auth_auth_proto_rawDescGZIP(), []int{4}
}

func (x *RefreshTokenRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *RefreshTokenRequest) GetClientId() string {
	if x != nil && x.ClientId != nil {
		return *x.ClientId
	}
	return ""
}

func (x *RefreshTokenRequest) GetClientSecret() string {
	if x != nil && x.ClientSecret != nil {
		return *x.ClientSecret
	}
	return ""
}

// 用户刷新令牌 - 回应
type RefreshTokenResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RefreshToken  string                 `protobuf:"bytes,1,opt,name=refresh_token,proto3" json:"refresh_token,omitempty"` // 更新令牌，用来获取下一次的访问令牌，可选项。
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshTokenResponse) Reset() {
	*x = RefreshTokenResponse{}
	mi := &file_v1_auth_auth_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenResponse) ProtoMessage() {}

func (x *RefreshTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_auth_auth_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenResponse.ProtoReflect.Descriptor instead.
func (*RefreshTokenResponse) Descriptor() ([]byte, []int) {
	return file_v1_auth_auth_proto_rawDescGZIP(), []int{5}
}

func (x *RefreshTokenResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

var File_v1_auth_auth_proto protoreflect.FileDescriptor

const file_v1_auth_auth_proto_rawDesc = "" +
	"\n" +
	"\x12v1/auth/auth.proto\x12\vapi.auth.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1copenapi/v3/annotations.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x14v1/common/user.proto\"q\n" +
	"\x0fRegisterRequest\x12 \n" +
	"\busername\x18\x01 \x01(\tB\x04\xe2A\x01\x02R\busername\x12 \n" +
	"\bpassword\x18\x02 \x01(\tB\x04\xe2A\x01\x02R\bpassword\x12\x1a\n" +
	"\x05email\x18\x03 \x01(\tB\x04\xe2A\x01\x02R\x05email\"\x1f\n" +
	"\rLogoutRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\"\x84\x02\n" +
	"\fLoginRequest\x12 \n" +
	"\busername\x18\x01 \x01(\tB\x04\xe2A\x01\x02R\busername\x12 \n" +
	"\bpassword\x18\x02 \x01(\tB\x04\xe2A\x01\x02R\bpassword\x12D\n" +
	"\tclient_id\x18\x05 \x01(\tB!\xe2A\x01\x01\xbaG\x1a\x92\x02\x17应用程序的识别IDH\x00R\tclient_id\x88\x01\x01\x12J\n" +
	"\rclient_secret\x18\x06 \x01(\tB\x1f\xe2A\x01\x01\xbaG\x18\x92\x02\x15应用程序的密码H\x01R\rclient_secret\x88\x01\x01B\f\n" +
	"\n" +
	"_client_idB\x10\n" +
	"\x0e_client_secret\"\xfe\x06\n" +
	"\rLoginResponse\x12y\n" +
	"\faccess_token\x18\x01 \x01(\tBU\xe2A\x01\x02\xbaGN\x92\x02K访问令牌，必选项。授权服务器颁发的访问令牌字符串。R\faccess_token\x12\xc1\x02\n" +
	"\rrefresh_token\x18\x02 \x01(\tB\x9a\x02\xe2A\x01\x02\xbaG\x92\x02\x92\x02\x8e\x02更新令牌，用来获取下一次的访问令牌，可选项。如果访问令牌将过期，则返回刷新令牌很有用，应用程序可以使用该刷新令牌来获取另一个访问令牌。但是，通过隐式授予颁发的令牌不能颁发刷新令牌。R\rrefresh_token\x12\xb5\x01\n" +
	"\n" +
	"token_type\x18\x03 \x01(\tB\x94\x01\xbaG\x90\x01\x8a\x02\b\x1a\x06Bearer\x92\x02\x81\x01令牌的类型，该值大小写不敏感，必选项，可以是bearer类型或mac类型，通常只是字符串“Bearer”。R\n" +
	"token_type\x12\xe6\x01\n" +
	"\n" +
	"expires_in\x18\x04 \x01(\x03B\xc0\x01\xe2A\x01\x01\xbaG\xb8\x01\x92\x02\xb4\x01令牌有效时间，单位为秒。如果访问令牌过期，服务器应回复授予访问令牌的持续时间。如果省略该参数，必须其他方式设置过期时间。H\x00R\n" +
	"expires_in\x88\x01\x01B\r\n" +
	"\v_expires_in\"\x8b\x04\n" +
	"\x13RefreshTokenRequest\x12\xc1\x02\n" +
	"\rrefresh_token\x18\x01 \x01(\tB\x9a\x02\xe2A\x01\x02\xbaG\x92\x02\x92\x02\x8e\x02更新令牌，用来获取下一次的访问令牌，可选项。如果访问令牌将过期，则返回刷新令牌很有用，应用程序可以使用该刷新令牌来获取另一个访问令牌。但是，通过隐式授予颁发的令牌不能颁发刷新令牌。R\rrefresh_token\x12D\n" +
	"\tclient_id\x18\x05 \x01(\tB!\xe2A\x01\x01\xbaG\x1a\x92\x02\x17应用程序的识别IDH\x00R\tclient_id\x88\x01\x01\x12J\n" +
	"\rclient_secret\x18\x06 \x01(\tB\x1f\xe2A\x01\x01\xbaG\x18\x92\x02\x15应用程序的密码H\x01R\rclient_secret\x88\x01\x01B\f\n" +
	"\n" +
	"_client_idB\x10\n" +
	"\x0e_client_secret\"\xda\x02\n" +
	"\x14RefreshTokenResponse\x12\xc1\x02\n" +
	"\rrefresh_token\x18\x01 \x01(\tB\x9a\x02\xe2A\x01\x02\xbaG\x92\x02\x92\x02\x8e\x02更新令牌，用来获取下一次的访问令牌，可选项。如果访问令牌将过期，则返回刷新令牌很有用，应用程序可以使用该刷新令牌来获取另一个访问令牌。但是，通过隐式授予颁发的令牌不能颁发刷新令牌。R\rrefresh_token*h\n" +
	"\x14VerifyPasswordResult\x12\v\n" +
	"\aSUCCESS\x10\x00\x12\x16\n" +
	"\x12ACCOUNT_NOT_EXISTS\x10\x01\x12\x12\n" +
	"\x0eWRONG_PASSWORD\x10\x02\x12\n" +
	"\n" +
	"\x06FREEZE\x10\x03\x12\v\n" +
	"\aDELETED\x10\x042\x91\x03\n" +
	"\x04Auth\x12^\n" +
	"\x05Login\x12\x19.api.auth.v1.LoginRequest\x1a\x1a.api.auth.v1.LoginResponse\"\x1e\xbaG\x02Z\x00\x82\xd3\xe4\x93\x02\x13:\x01*\"\x0e/auth/v1/login\x12X\n" +
	"\x06Logout\x12\x1a.api.auth.v1.LogoutRequest\x1a\x16.google.protobuf.Empty\"\x1a\x82\xd3\xe4\x93\x02\x14:\x01*\"\x0f/auth/v1/logout\x12^\n" +
	"\bRegister\x12\x1c.api.auth.v1.RegisterRequest\x1a\x16.google.protobuf.Empty\"\x1c\x82\xd3\xe4\x93\x02\x16:\x01*\"\x11/auth/v1/register\x12o\n" +
	"\fRefreshToken\x12 .api.auth.v1.RefreshTokenRequest\x1a\x1a.api.auth.v1.LoginResponse\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/auth/v1/refresh_tokenB.Z,github/invokerw/gintos/demo/api/v1/auth;authb\x06proto3"

var (
	file_v1_auth_auth_proto_rawDescOnce sync.Once
	file_v1_auth_auth_proto_rawDescData []byte
)

func file_v1_auth_auth_proto_rawDescGZIP() []byte {
	file_v1_auth_auth_proto_rawDescOnce.Do(func() {
		file_v1_auth_auth_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_auth_auth_proto_rawDesc), len(file_v1_auth_auth_proto_rawDesc)))
	})
	return file_v1_auth_auth_proto_rawDescData
}

var file_v1_auth_auth_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_v1_auth_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_v1_auth_auth_proto_goTypes = []any{
	(VerifyPasswordResult)(0),    // 0: api.auth.v1.VerifyPasswordResult
	(*RegisterRequest)(nil),      // 1: api.auth.v1.RegisterRequest
	(*LogoutRequest)(nil),        // 2: api.auth.v1.LogoutRequest
	(*LoginRequest)(nil),         // 3: api.auth.v1.LoginRequest
	(*LoginResponse)(nil),        // 4: api.auth.v1.LoginResponse
	(*RefreshTokenRequest)(nil),  // 5: api.auth.v1.RefreshTokenRequest
	(*RefreshTokenResponse)(nil), // 6: api.auth.v1.RefreshTokenResponse
	(*emptypb.Empty)(nil),        // 7: google.protobuf.Empty
}
var file_v1_auth_auth_proto_depIdxs = []int32{
	3, // 0: api.auth.v1.Auth.Login:input_type -> api.auth.v1.LoginRequest
	2, // 1: api.auth.v1.Auth.Logout:input_type -> api.auth.v1.LogoutRequest
	1, // 2: api.auth.v1.Auth.Register:input_type -> api.auth.v1.RegisterRequest
	5, // 3: api.auth.v1.Auth.RefreshToken:input_type -> api.auth.v1.RefreshTokenRequest
	4, // 4: api.auth.v1.Auth.Login:output_type -> api.auth.v1.LoginResponse
	7, // 5: api.auth.v1.Auth.Logout:output_type -> google.protobuf.Empty
	7, // 6: api.auth.v1.Auth.Register:output_type -> google.protobuf.Empty
	4, // 7: api.auth.v1.Auth.RefreshToken:output_type -> api.auth.v1.LoginResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_v1_auth_auth_proto_init() }
func file_v1_auth_auth_proto_init() {
	if File_v1_auth_auth_proto != nil {
		return
	}
	file_v1_auth_auth_proto_msgTypes[2].OneofWrappers = []any{}
	file_v1_auth_auth_proto_msgTypes[3].OneofWrappers = []any{}
	file_v1_auth_auth_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_auth_auth_proto_rawDesc), len(file_v1_auth_auth_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_auth_auth_proto_goTypes,
		DependencyIndexes: file_v1_auth_auth_proto_depIdxs,
		EnumInfos:         file_v1_auth_auth_proto_enumTypes,
		MessageInfos:      file_v1_auth_auth_proto_msgTypes,
	}.Build()
	File_v1_auth_auth_proto = out.File
	file_v1_auth_auth_proto_goTypes = nil
	file_v1_auth_auth_proto_depIdxs = nil
}
