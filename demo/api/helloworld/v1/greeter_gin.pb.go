// Code generated by protoc-gen-go-gin. DO NOT EDIT.
// versions:
// - protoc-gen-go-gin v1.0.0
// - protoc             v3.14.0
// source: helloworld/v1/greeter.proto

package v1

import (
	gin "github.com/gin-gonic/gin"
	resp "github/invokerw/gintos/common/resp"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the kratos package it is being compiled against.
var _ = new(gin.Context)
var _ = new(resp.Response)

const OperationGreeterSayHello = "/helloworld.v1.Greeter/SayHello"

type IGreeterServer interface {
	// SayHello Sends a greeting
	SayHello(*gin.Context, *HelloRequest) (*HelloReply, error)
}

func RegisterGreeterServer(r gin.IRoutes, srv IGreeterServer) {
	r.GET("/helloworld/:name", _Greeter_SayHello0_HTTP_Handler(srv))
}

func _Greeter_SayHello0_HTTP_Handler(srv IGreeterServer) func(ctx *gin.Context) {
	return func(ctx *gin.Context) {
		var in HelloRequest
		if err := ctx.BindQuery(&in); err != nil {
			resp.FailWithMessage(ctx, err.Error())
			return
		}
		if err := ctx.ShouldBindUri(&in); err != nil {
			resp.FailWithMessage(ctx, err.Error())
			return
		}
		// http.SetOperation(ctx, OperationGreeterSayHello)
		reply, err := srv.SayHello(ctx, &in)
		if err != nil {
			resp.FailWithMessage(ctx, err.Error())
			return
		}
		resp.OkWithData(ctx, reply)
	}
}
