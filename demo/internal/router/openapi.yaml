# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /api/v1/admin/delete_roles:
        post:
            tags:
                - Admin
            operationId: Admin_DeleteRoles
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.v1.admin.DeleteRolesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
            security:
                - {}
    /api/v1/admin/delete_users:
        post:
            tags:
                - Admin
            operationId: Admin_DeleteUsers
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.v1.admin.DeleteUsersRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
            security:
                - {}
    /api/v1/admin/get_role_list:
        post:
            tags:
                - Admin
            operationId: Admin_GetRoleList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.v1.admin.GetRoleListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.admin.GetRoleListResponse'
            security:
                - {}
    /api/v1/admin/get_user_list:
        post:
            tags:
                - Admin
            operationId: Admin_GetUserList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.v1.admin.GetUserListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.admin.GetUserListResponse'
            security:
                - {}
    /api/v1/admin/update_roles:
        post:
            tags:
                - Admin
            operationId: Admin_UpdateRoles
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.v1.admin.UpdateRolesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.admin.UpdateRolesResponse'
            security:
                - {}
    /api/v1/admin/update_users:
        post:
            tags:
                - Admin
            operationId: Admin_UpdateUsers
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.v1.admin.UpdateUsersRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.admin.UpdateUsersResponse'
            security:
                - {}
    /api/v1/auth/get_async_routes:
        get:
            tags:
                - Auth
            operationId: Auth_GetAsyncRoutes
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.auth.GetAsyncRoutesResponse'
    /api/v1/auth/login:
        post:
            tags:
                - Auth
            description: 登录
            operationId: Auth_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.v1.auth.LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.auth.LoginResponse'
            security:
                - {}
    /api/v1/auth/logout:
        post:
            tags:
                - Auth
            description: 登出
            operationId: Auth_Logout
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.v1.auth.LogoutRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
    /api/v1/auth/refresh_token:
        post:
            tags:
                - Auth
            description: 刷新认证令牌
            operationId: Auth_RefreshToken
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.v1.auth.RefreshTokenRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.auth.RefreshTokenResponse'
    /api/v1/auth/register:
        post:
            tags:
                - Auth
            operationId: Auth_Register
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.v1.auth.RegisterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
    /api/v1/base/me:
        get:
            tags:
                - Base
            description: 后台获取已经登录的用户的数据
            operationId: Base_GetMe
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.base.GetMeResponse'
    /api/v1/helloworld/:name:
        get:
            tags:
                - Greeter
            description: Sends a greeting
            operationId: Greeter_SayHello
            parameters:
                - name: name
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.v1.helloworld.HelloReply'
components:
    schemas:
        api.common.v1.PageInfo:
            type: object
            properties:
                offset:
                    type: integer
                    description: 偏移
                    format: int32
                pageSize:
                    type: integer
                    description: 数量
                    format: int32
        api.common.v1.Role:
            type: object
            properties:
                id:
                    type: string
                    description: 角色ID
                name:
                    type: string
                    description: 角色名称
                desc:
                    type: string
                    description: 角色描述
                parentID:
                    type: string
                    description: 父角色ID
                sortID:
                    type: integer
                    description: 排序ID
                    format: int32
                createTime:
                    type: string
                    description: 创建时间
                updateTime:
                    type: string
                    description: 更新时间
            description: Role
        api.common.v1.User:
            type: object
            properties:
                id:
                    type: string
                    description: 用户ID
                roleName:
                    type: string
                    description: 角色名称
                createBy:
                    type: string
                    description: 创建者ID
                updateBy:
                    type: string
                    description: 更新者ID
                username:
                    type: string
                    description: 登录名
                password:
                    type: string
                    description: 密码
                nickname:
                    type: string
                    description: 昵称
                avatar:
                    type: string
                    description: 头像
                email:
                    type: string
                    description: 邮箱
                mobile:
                    type: string
                    description: 手机号
                gender:
                    type: integer
                    description: 性别
                    format: enum
                remark:
                    type: string
                    description: 备注名
                lastLoginTime:
                    type: string
                    description: 最后登录时间
                status:
                    enum:
                        - ON
                        - OFF
                    type: integer
                    default: ON
                    description: 用户状态
                    format: enum
                authority:
                    type: integer
                    default: CUSTOMER_USER
                    description: 权限
                    format: enum
                roles:
                    type: array
                    items:
                        type: string
                    description: 角色
                createTime:
                    type: string
                    description: 创建时间
                updateTime:
                    type: string
                    description: 更新时间
            description: 用户
        api.v1.admin.DeleteRolesRequest:
            type: object
            properties:
                names:
                    type: array
                    items:
                        type: string
                    description: 角色名字
        api.v1.admin.DeleteUsersRequest:
            type: object
            properties:
                names:
                    type: array
                    items:
                        type: string
                    description: 用户名
        api.v1.admin.GetRoleListRequest:
            type: object
            properties:
                page:
                    $ref: '#/components/schemas/api.common.v1.PageInfo'
                name:
                    type: string
                    description: 角色名
        api.v1.admin.GetRoleListResponse:
            type: object
            properties:
                roles:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.common.v1.Role'
        api.v1.admin.GetUserListRequest:
            type: object
            properties:
                page:
                    $ref: '#/components/schemas/api.common.v1.PageInfo'
                username:
                    type: string
                    description: 登录名
                nickname:
                    type: string
                    description: 昵称
        api.v1.admin.GetUserListResponse:
            type: object
            properties:
                users:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.common.v1.User'
        api.v1.admin.UpdateRolesRequest:
            type: object
            properties:
                roles:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.common.v1.Role'
                    description: 角色信息
        api.v1.admin.UpdateRolesResponse:
            type: object
            properties:
                roles:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.common.v1.Role'
        api.v1.admin.UpdateUsersRequest:
            type: object
            properties:
                users:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.common.v1.User'
                    description: 用户信息
        api.v1.admin.UpdateUsersResponse:
            type: object
            properties:
                users:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.common.v1.User'
        api.v1.auth.GetAsyncRoutesResponse:
            type: object
            properties:
                routes:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.v1.auth.RouteConfig'
                    description: 异步路由列表
        api.v1.auth.LoginRequest:
            required:
                - username
                - password
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
            description: 用户后台登录 - 请求
        api.v1.auth.LoginResponse:
            required:
                - user
                - access_token
                - refresh_token
                - expires
                - refresh_expires
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.common.v1.User'
                access_token:
                    type: string
                    description: 访问令牌，必选项。
                refresh_token:
                    type: string
                    description: 更新令牌，用来获取下一次的访问令牌，
                expires:
                    type: string
                    description: 令牌过期时间，单位为毫秒
                refresh_expires:
                    type: string
                    description: 刷新令牌过期时间，单位为毫秒
            description: 用户后台登录 - 回应
        api.v1.auth.LogoutRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
            description: 用户后台登出 - 请求
        api.v1.auth.RefreshTokenRequest:
            required:
                - refresh_token
            type: object
            properties:
                refresh_token:
                    type: string
                    description: 更新令牌，用来获取下一次的访问令牌
            description: 用户刷新令牌 - 请求
        api.v1.auth.RefreshTokenResponse:
            required:
                - user
                - access_token
                - refresh_token
                - expires
                - refresh_expires
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.common.v1.User'
                access_token:
                    type: string
                    description: 访问令牌，必选项。
                refresh_token:
                    type: string
                    description: 更新令牌，用来获取下一次的访问令牌，
                expires:
                    type: string
                    description: 令牌过期时间，单位为毫秒
                refresh_expires:
                    type: string
                    description: 刷新令牌过期时间，单位为毫秒
            description: 用户刷新令牌 - 回应
        api.v1.auth.RegisterRequest:
            required:
                - username
                - password
                - email
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
                email:
                    type: string
        api.v1.auth.RouteConfig:
            type: object
            properties:
                path:
                    type: string
                name:
                    type: string
                redirect:
                    type: string
                meta:
                    $ref: '#/components/schemas/api.v1.auth.RouteMeta'
                component:
                    type: string
                children:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.v1.auth.RouteConfig'
            description: 定义路由配置表
        api.v1.auth.RouteMeta:
            type: object
            properties:
                title:
                    type: string
                icon:
                    type: string
                rank:
                    type: integer
                    format: int32
                showLink:
                    type: boolean
                roles:
                    type: array
                    items:
                        type: string
                auths:
                    type: array
                    items:
                        type: string
            description: 定义路由元信息
        api.v1.base.GetMeResponse:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.common.v1.User'
        api.v1.helloworld.HelloReply:
            type: object
            properties:
                message:
                    type: string
            description: The response message containing the greetings
tags:
    - name: Admin
    - name: Auth
    - name: Base
    - name: Greeter
      description: The greeting service definition.
